#!/usr/bin/env php
<?php
include_once '/var/www/efi-precompute/html/includes/main.inc.php';

error_reporting(E_ERROR | E_PARSE);
main();
//Submits Jobs for Filtering XGMML
//Uses the database object to create a connection
//Gew new jobs
//create directories for each job, one by one
//copy the sequence fasta into a file_put_contents
//create a qsub script for the job, based on a template in a qsub object?
//submit the job
//let other scripts take care of errors and emailing
function main(){

    $db = new database();
    $job_rows = $db->getJobsWithFlag('filter_xgmml',__NEW__);

    $new_jobs_count = count($job_rows);


    if($new_jobs_count ==0) {
        print "No new jobs to submit\n";
        exit;
    }

    $submitted_job_count = 0;

    foreach($job_rows as $row){
        $job_id = $row['job_id'];
        $email = $row['job_email'];
        $token = $row['job_session'];
        parse_str($row['job_parameters'],$parameters);
        $cutoff = $parameters['alignment_score'];

        $data_dir = "/home/groups/efi/est-precompute48/generated_data"; #GET FROM CONFIG FILE
        $output_dir = "/home/a-m/efi-precompute/no_backup/$job_id/$token"; #GET FROM CONFIG FILE
        $mkdir = mkdir($output_dir,0775,true);
        if($mkdir == false){
            //something bad
            //
            print "JOB_ID:$job_id\t Error[Couldn't create folder [$output_dir] for job: [$job_id] ]\n";
            if(! file_exists($output_dir)){
                continue;
            }
        }
        createJobList($data_dir,$output_dir,$parameters);
        createQsub($output_dir,$job_id,$cutoff);
        $error  = submitQsub($output_dir);
        if(isset($error)){
            echo "Queue is full or some other error\n"; #print this to a log
        }
        else{
            $flag = "RUNNING";
            $db->updateFlag($job_id,$flag);
            $submitted_job_count+=1;
            print "Successfully created directory for qsub [$dir] and submitted it. \n";
        }
    }
    $db = null;
    print "Submitted $submitted_job_count of $new_jobs_count\n";
}


function createJobList($data_dir,$output_dir,$parameters){
    $name = $parameters['subject_name'];
    $type = $parameters['subject_type'];

    $data_dir = "$data_dir/$type/$name/xgmml/original";

    $full_xgmml = "$data_dir/$name-full.xgmml";
    #$decimals = array(.40,.45,.50,.55,.60,.65,.70,.75,.80,.85,.90,.95,1);
    $decimals = array(40,45,50,55,60,65,70,75,80,85,90,95,98,100);
    $file_list[] = $full_xgmml;
    foreach ($decimals as $decimal){
        $file_list[] = "$data_dir/$name-$decimal.xgmml";
    }
    $file_list_string = implode("\n", $file_list);
    file_put_contents("$output_dir/xgmml.list", "$file_list_string\n");

}

function createQsub($dir,$job_id,$cutoff){
    $qsub =
"
#!/bin/bash
# ----------------QSUB Parameters----------------- #
#PBS -S /bin/bash
#PBS -N filter[$job_id]
#PBS -q default
#PBS -l nodes=1:ppn=1,mem=1000mb
#PBS -j oe
#PBS -t 1-15
#PBS -A efi
# ----------------Load Modules-------------------- #
module load est-precompute/48
# ----------------Your Commands------------------- #
cd $dir
JOB_LIST=\"$dir/xgmml.list\"
SED=\"sed -n \${PBS_ARRAYID}p \$JOB_LIST\"
echo \$SED
INPUT_XGMML=`\$SED`
COMMAND=\"/home/groups/efi/est-precompute48/bin/filter_xgmml2.pl --input_xgmml=\$INPUT_XGMML --output_dir=$dir --cutoff=$cutoff\"
echo \$COMMAND
\$COMMAND > \$PBS_ARRAYID.log
      ";


    file_put_contents("$dir/filter_xgmml.sh",$qsub); #Prints job 

}
function submitQsub($dir){
    $command = "qsub $dir/filter_xgmml.sh &> $dir/PBS_JOBID ";
    $error = rtrim(shell_exec($command));

    if(strpos($error,"cannot be loaded") != false){
        print "ERROR[$error]\n";
        return $error;
    }
    

/*  #error = system ($command)
    if($error){
        return $error;
    }
    else{
        return null;
 */

    #$error = system($command);
    #if($error){
    #    print "to log, error, couldn't submit";
    #}
    #else{

    #if(return of command is not "Cluster is full" and job was able to submit){
    #  updateDB($job_id,$session,$flag);

    #} 
    # system($command);
}

?>



